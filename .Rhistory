text<- pdf_text("./Inputs/PDF/YK64 XVX (1).pdf") %>%
df <- pdf_text("./Inputs/PDF/YK64 XVX (1).pdf") %>%
read_lines() %>%
View()
df <- pdf_text("./Inputs/PDF/YK64 XVX (1).pdf") %>%
read_lines() %>%
View()
df <- pdf_text("./Inputs/PDF/YK64 XVX (1).pdf") %>%
read_lines() %>%
grep('^\\s{2}\\w', ., value = TRUE) %>%    # select lines with states, which start with space, space, letter
paste(collapse = '\n') %>%    # recombine
read_fwf(fwf_empty(.)) %>%    # read as fixed-width file
View()
df <- pdf_text("./Inputs/PDF/YK64 XVX (1).pdf") %>%
read_lines() %>%
grep('^\\s{2}\\w', ., value = TRUE) %>%    # select lines with states, which start with space, space, letter
paste(collapse = '\n') %>%    # recombine
#  read_fwf(fwf_empty(.)) %>%    # read as fixed-width file
View()
df <- pdf_text("./Inputs/PDF/YK64 XVX (1).pdf") %>%
read_lines() %>%
# grep('^\\s{2}\\w', ., value = TRUE) %>%    # select lines with states, which start with space, space, letter
paste(collapse = '\n') %>%    # recombine
#  read_fwf(fwf_empty(.)) %>%    # read as fixed-width file
View()
df <- pdf_text("./Inputs/PDF/YK64 XVX (1).pdf") %>%
read_lines() %>%
View()
text_raw
library(pdftables)
convert_pdf("./Inputs/PDF/YK64 XVX (1).pdf","./Outputs/pdf_to_text.csv")
convert_pdf("./Inputs/PDF/YK64 XVX (1).pdf","./Outputs/pdf_to_text.csv")
install.packages("ghit")
library(ghit)
ghit::install_github(c("leeper/tabulizerjars", "leeper/tabulizer"), INSTALL_opts = "--no-multiarch", dependencies = c("Depends", "Imports"))
ghit::install_github(c("ropensci/tabulizerjars", "ropensci/tabulizer"))
library(tabulizerjars)
library(tabulizer)
out <- extract_tables("./Inputs/PDF/YK64 XVX (1).pdf")
out
out[2]
final <- do.call(rbind, out[-length(out)])
final <- as.data.frame(final[3:nrow(final), ])
View(final)
out <- extract_tables("./Inputs/PDF/YK64 XVX (1).pdf")
final <- do.call(rbind, out[-length(out)])
final
View(final)
out <- extract_tables("./Inputs/PDF/YK64 XVX (1).pdf",pages = 2)
head(out[1])
head(out[[1]])
out <- extract_tables("./Inputs/PDF/YK64 XVX (1).pdf",pages = 2)
head(out[[1]])
out <- extract_tables("./Inputs/PDF/YK64 XVX (1).pdf",pages = 2)
out
out <- extract_tables("./Inputs/PDF/YK64 XVX (1).pdf")
out
out <- extract_tables("./Inputs/PDF/YK64 XVX (1).pdf",method = "data.frame")
out
out <- extract_tables("./Inputs/PDF/YK64 XVX (1).pdf",pages = 2,guess = TRUE,method = "data.frame")
out
out <- extract_tables("./Inputs/PDF/YK64 XVX (1).pdf",pages = 2,guess = TRUE,method = "data.frame")
out
out <- extract_tables("./Inputs/PDF/YK64 XVX (1).pdf",pages = 2,area = list(c(126, 149, 212, 462)), guess = FALSE,method = "data.frame")
out
out <- extract_tables("./Inputs/PDF/YK64 XVX (1).pdf",pages = 2,area = list(c(1 ,1, 400, 400)), guess = FALSE,method = "data.frame")
out
View(out)
out
out <- extract_tables("./Inputs/PDF/YK64 XVX (1).pdf",pages = 2,area = list(c(1 ,1, 400, 400)), guess = FALSE) %>%
as.data.frame() %>%
View()
out <- extract_tables("./Inputs/PDF/YK64 XVX (1).pdf",pages = 2,area = list(c(1 ,100, 400, 1000)), guess = FALSE) %>%
as.data.frame() %>%
View()
out <- extract_tables("./Inputs/PDF/YK64 XVX (1).pdf",pages = 2,area = list(c(1 ,1, 4, 1)), guess = FALSE) %>%
as.data.frame() %>%
View()
out <- extract_tables("./Inputs/PDF/YK64 XVX (1).pdf",pages = 2,area = list(c(1 ,1, 1, 1)), guess = FALSE) %>%
as.data.frame() %>%
View()
out_text <- extract_text("./Inputs/PDF/YK64 XVX (1).pdf")
out_text
out_mdt <- extract_metadata("./Inputs/PDF/YK64 XVX (1).pdf")
str(out_mdt)
out <- extract_tables("./Inputs/PDF/YK64 XVX (1).pdf",pages = 2,area = list(c(216 ,421, 755, 744)), guess = FALSE,method =  "data.frame") %>%
View()
.[[1]]
out <- extract_tables("./Inputs/PDF/YK64 XVX (1).pdf",pages = 2,area = list(c(216 ,421, 755, 744)), guess = FALSE,method =  "data.frame")
View(out)
out[[1]]
str(out)
out <- extract_tables("./Inputs/PDF/YK64 XVX (1).pdf",pages = 2,area = list(c(216 ,421, 755, 744)), guess = FALSE,method =  "data.frame")
out
out <- extract_tables("./Inputs/PDF/YK64 XVX (1).pdf",pages = 2,area = list(c(1325 ,415, 767, 813)), guess = FALSE,method =  "data.frame")
out
str(out)
out <- extract_tables("./Inputs/PDF/YK64 XVX (1).pdf",pages = 2,area = list(c(221 ,427, 733, 118)), guess = FALSE,method =  "data.frame")
out
out <- extract_tables("./Inputs/PDF/YK64 XVX (1).pdf",pages = 2,area = list(c(221 ,682, 738, 123)), guess = FALSE,method =  "data.frame")
out
out <- extract_tables("./Inputs/PDF/YK64 XVX (1).pdf",pages = 2,area = list(c(221 ,682, 738, 123)), guess = FALSE)
out
# Extracting text from PDF
out_text <- extract_text("./Inputs/PDF/YK64 XVX (1).pdf")
out_text
out_text_words <- strsplit(paste(out_text, collapse = " "), ' ')[[1]]
out_text_words
out_text_words <- unique(strsplit(paste(out_text, collapse = " "), ' ')[[1]])
matches <- unique (grep(".....-\d\d", out_text_words, value=TRUE))
matches <- unique (grep(".....\-\d\d", out_text_words, value=TRUE))
matches <- unique (grep(".....\\-\d\d", out_text_words, value=TRUE))
matches <- unique (grep(".....\\-\\d\\d", out_text_words, value=TRUE))
matches
car_make <- unique (grep("Make\\:...............", out_text_words, value=TRUE))
car_make
car_make <- unique (grep("Make\\:*", out_text_words, value=TRUE))
car_make
car_make <- unique (grep("Make\\:*****", out_text_words, value=TRUE))
out_text_words
gsub("\r","",out_text_words)
gsub("\n","",out_text_words)
out_text <- extract_text("./Inputs/PDF/YK64 XVX (1).pdf")
out_text_words <- unique(strsplit(paste(out_text, collapse = " "), ' ')[[1]])
out_text_words <- gsub("\r","",out_text_words)
out_text_words <- gsub("\n","",out_text_words)
car_make <- intersect(out_text_words,car_makes)
car_makes <- c("ACURA","AM GENERAL","AMERICAN IRONHORSE","APRILIA","ARCTIC CAT","ASTON MARTIN","ATK","AUDI","AVANTI","BENTLEY","BIG DOG","BIMOTA","BLUE BIRD","BMW","BOMBARDIER","BUELL","BUICK","CADILLAC","CANNONDALE","CHANCE COACH TRANSIT BUS","CHEVROLET","CHRYSLER","COBRA","DAEWOO","DODGE","DUCATI","E-TON","EL DORADO","FERRARI","FORD","FREIGHTLINER","GAS GAS","GILLIG","GMC","HARLEY DAVIDSON","HINO","HM","HONDA","HUSABERG","HUSQVARNA","HYUNDAI","INDIAN","INFINITI","INTERNATIONAL","ISUZU","JAGUAR","JEEP","KAWASAKI","KENWORTH","KIA","KTM","KYMCO","LAFORZA","LAMBORGHINI","LAND ROVER","LEXUS","LINCOLN","LOTUS","MACK","MAZDA","MERCEDES-BENZ","MERCURY","MITSUBISHI","MITSUBISHI FUSO","MOTO GUZZI","MOTOR COACH INDUSTRIES","MV AGUSTA","NEW FLYER","NISSAN","NOVA BUS CORPORATION","OLDSMOBILE","ORION BUS","OSHKOSH MOTOR TRUCK CO.","OTTAWA","PANOZ","PETERBILT","PEUGEOT","PLYMOUTH","POLARIS","PONTIAC","PORSCHE","QVALE","RENAULT","ROLLS ROYCE","SAAB","SATURN","SEA-DOO","SEAT","SKI-DOO","STERLING","STERLING TRUCK","SUBARU","SUZUKI","TM","TOYOTA","TRIUMPH","UD","VICTORY","VOLKSWAGEN","VOLVO","WESTERN STAR","WORKHORSE","YAMAHA","ALFA ROMEO","AUTOCAR LLC.","COUNTRY COACH MOTORHOME","HUMMER","KASEA","LEM","MASERATI","MINI","MORGAN","SALEEN","WESTERN RV","MAYBACH","ROVER","VENTO","FIAT","JOHN DEERE","KUBOTA","SCION","SMART","VESPA","HYOSUNG","PIAGGIO","ARGO","BUGATTI","PIERCE MFG. INC.","AMERICAN LAFRANCE","CAN-AM","CRANE CARRIER","CUB CADET","BETA","BOBCAT","TESLA","RAM","VPG","CODA","FISKER","MCLAREN","SRT","BERTONE","IC CORPORATION","NASH")
car_make <- intersect(out_text_words,car_makes)
car_make
# Extracting text and individual words from PDF
out_text <- extract_text("./Inputs/PDF/YK64 XVX (1).pdf")
out_text
error_textx <- str_match(a, ".....\\-\\d\\d (.*?) \\r\\n")
library(stringr)
error_textx <- str_match(a, ".....\\-\\d\\d (.*?) \\r\\n")
error_textx <- str_match(out_text, ".....\\-\\d\\d (.*?) \\r\\n")
error_textx
error_textx <- str_match(out_text, ".....\\-\\d\\d (.*?) \r\n")
error_textx
out_text <- gsub("([\\])","", out_text)
out_text
out_text <- gsub("\\","", out_text)
out_text <- gsub("\\","", out_text,fixed=TRUE)
out_text
error_textx <- str_match(out_text, ".....\\-\\d\\d (.*?) [\r\n]+")
error_textx
error_textx <- str_match(out_text, ".....\\-\\d\\d (.*?) (\r\n|\r|\n)")
error_textx
error_textx <- gsub(".*.....\\-\\d\\d | (\r\n|\r|\n).*","",out_text)
error_textx
library(gsubfn
library(gsubfn)
install.packages(gsubfn)
install.packages("gsubfn")
library(gsubfn)
error_textx <- strapplyc(out_text, ".....\\-\\d\\d (.*?) (\r\n|\r|\n).*", simplify = c)
error_textx
error_textx <- strapplyc(out_text, ".....\\-\\d\\d(.*?)(\r\n|\r|\n).*", simplify = c)
error_textx
error_texts <- unique(strapplyc(out_text, ".....\\-\\d\\d(.*?)(\r\n|\r|\n).*", simplify = c))
summary_data <- as.data.frame(c("YK64 XVX.pdf",error_codes,error_texts,car_make))
error_codes <- unique (grep(".....\\-\\d\\d", out_text_words, value=TRUE))
summary_data <- as.data.frame(c("YK64 XVX.pdf",error_codes,error_texts,car_make))
View(summary_data)
error_codes <- as.vector(unique (grep(".....\\-\\d\\d", out_text_words, value=TRUE)))
#error_textx <- gsub(".*.....\\-\\d\\d | (\r\n|\r|\n).*","",out_text)
error_texts <- as.vector(unique(strapplyc(out_text, ".....\\-\\d\\d(.*?)(\r\n|\r|\n).*", simplify = c)))
summary_data <- as.data.frame(c("YK64 XVX.pdf",error_codes,error_texts,car_make))
View(summary_data)
error_codes
type(error_codes)
class(error_codes)
summary_data <- c("YK64 XVX.pdf",error_codes,error_texts,car_make))
summary_data <- c("YK64 XVX.pdf",error_codes,error_texts,car_make)
summary_data
summary_data <- c("YK64 XVX.pdf",list(error_codes),list(error_texts),car_make)
summary_data
#install.packages("RPostgreSQL")
require("RPostgreSQL")
library(jsonlite)
library(dplyr)
library(ggplot2)
library(highcharter)
library(geojsonio)
library(lubridate)
install.packages("ghit")
library(ghit)
ghit::install_github(c("leeper/tabulizerjars", "leeper/tabulizer"), INSTALL_opts = "--no-multiarch", dependencies = c("Depends", "Imports"))
install.packages("gsubfn")
library(tabulizer)
library(stringr)
library(gsubfn)
car_makes <- c("ACURA","AM GENERAL","AMERICAN IRONHORSE","APRILIA","ARCTIC CAT","ASTON MARTIN","ATK","AUDI","AVANTI","BENTLEY","BIG DOG","BIMOTA","BLUE BIRD","BMW","BOMBARDIER","BUELL","BUICK","CADILLAC","CANNONDALE","CHANCE COACH TRANSIT BUS","CHEVROLET","CHRYSLER","COBRA","DAEWOO","DODGE","DUCATI","E-TON","EL DORADO","FERRARI","FORD","FREIGHTLINER","GAS GAS","GILLIG","GMC","HARLEY DAVIDSON","HINO","HM","HONDA","HUSABERG","HUSQVARNA","HYUNDAI","INDIAN","INFINITI","INTERNATIONAL","ISUZU","JAGUAR","JEEP","KAWASAKI","KENWORTH","KIA","KTM","KYMCO","LAFORZA","LAMBORGHINI","LAND ROVER","LEXUS","LINCOLN","LOTUS","MACK","MAZDA","MERCEDES-BENZ","MERCURY","MITSUBISHI","MITSUBISHI FUSO","MOTO GUZZI","MOTOR COACH INDUSTRIES","MV AGUSTA","NEW FLYER","NISSAN","NOVA BUS CORPORATION","OLDSMOBILE","ORION BUS","OSHKOSH MOTOR TRUCK CO.","OTTAWA","PANOZ","PETERBILT","PEUGEOT","PLYMOUTH","POLARIS","PONTIAC","PORSCHE","QVALE","RENAULT","ROLLS ROYCE","SAAB","SATURN","SEA-DOO","SEAT","SKI-DOO","STERLING","STERLING TRUCK","SUBARU","SUZUKI","TM","TOYOTA","TRIUMPH","UD","VICTORY","VOLKSWAGEN","VOLVO","WESTERN STAR","WORKHORSE","YAMAHA","ALFA ROMEO","AUTOCAR LLC.","COUNTRY COACH MOTORHOME","HUMMER","KASEA","LEM","MASERATI","MINI","MORGAN","SALEEN","WESTERN RV","MAYBACH","ROVER","VENTO","FIAT","JOHN DEERE","KUBOTA","SCION","SMART","VESPA","HYOSUNG","PIAGGIO","ARGO","BUGATTI","PIERCE MFG. INC.","AMERICAN LAFRANCE","CAN-AM","CRANE CARRIER","CUB CADET","BETA","BOBCAT","TESLA","RAM","VPG","CODA","FISKER","MCLAREN","SRT","BERTONE","IC CORPORATION","NASH")
out_text <- extract_text("./Inputs/PDF/KR14OCUDiagnostic Report.pdf")
out_text <- gsub("\\","", out_text,fixed=TRUE)
out_text_words <- unique(strsplit(paste(out_text, collapse = " "), ' ')[[1]])
out_text_words <- gsub("\r","",out_text_words)
out_text_words <- gsub("\n","",out_text_words)
error_codes <- as.vector(unique (grep(".....\\-\\d\\d", out_text_words, value=TRUE)))
car_make <- intersect(out_text_words,car_makes)
error_texts <- as.vector(unique(strapplyc(out_text, ".....\\-\\d\\d(.*?)(\r\n|\r|\n).*", simplify = c)))
summary_data <- c("YK64 XVX.pdf",list(error_codes),list(error_texts),car_make)
summary_data
#Installing tabula R bindings
#install.packages("ghit")
#library(ghit)
#ghit::install_github(c("leeper/tabulizerjars", "leeper/tabulizer"), INSTALL_opts = "--no-multiarch", dependencies = c("Depends", "Imports"))
#install.packages("gsubfn")
#library(tabulizer)
#library(stringr)
#library(gsubfn)
#List of all car makes
car_makes <- c("ACURA","AM GENERAL","AMERICAN IRONHORSE","APRILIA","ARCTIC CAT","ASTON MARTIN","ATK","AUDI","AVANTI","BENTLEY","BIG DOG","BIMOTA","BLUE BIRD","BMW","BOMBARDIER","BUELL","BUICK","CADILLAC","CANNONDALE","CHANCE COACH TRANSIT BUS","CHEVROLET","CHRYSLER","COBRA","DAEWOO","DODGE","DUCATI","E-TON","EL DORADO","FERRARI","FORD","FREIGHTLINER","GAS GAS","GILLIG","GMC","HARLEY DAVIDSON","HINO","HM","HONDA","HUSABERG","HUSQVARNA","HYUNDAI","INDIAN","INFINITI","INTERNATIONAL","ISUZU","JAGUAR","JEEP","KAWASAKI","KENWORTH","KIA","KTM","KYMCO","LAFORZA","LAMBORGHINI","LAND ROVER","LEXUS","LINCOLN","LOTUS","MACK","MAZDA","MERCEDES-BENZ","MERCURY","MITSUBISHI","MITSUBISHI FUSO","MOTO GUZZI","MOTOR COACH INDUSTRIES","MV AGUSTA","NEW FLYER","NISSAN","NOVA BUS CORPORATION","OLDSMOBILE","ORION BUS","OSHKOSH MOTOR TRUCK CO.","OTTAWA","PANOZ","PETERBILT","PEUGEOT","PLYMOUTH","POLARIS","PONTIAC","PORSCHE","QVALE","RENAULT","ROLLS ROYCE","SAAB","SATURN","SEA-DOO","SEAT","SKI-DOO","STERLING","STERLING TRUCK","SUBARU","SUZUKI","TM","TOYOTA","TRIUMPH","UD","VICTORY","VOLKSWAGEN","VOLVO","WESTERN STAR","WORKHORSE","YAMAHA","ALFA ROMEO","AUTOCAR LLC.","COUNTRY COACH MOTORHOME","HUMMER","KASEA","LEM","MASERATI","MINI","MORGAN","SALEEN","WESTERN RV","MAYBACH","ROVER","VENTO","FIAT","JOHN DEERE","KUBOTA","SCION","SMART","VESPA","HYOSUNG","PIAGGIO","ARGO","BUGATTI","PIERCE MFG. INC.","AMERICAN LAFRANCE","CAN-AM","CRANE CARRIER","CUB CADET","BETA","BOBCAT","TESLA","RAM","VPG","CODA","FISKER","MCLAREN","SRT","BERTONE","IC CORPORATION","NASH")
# Extracting text and individual words from PDF
out_text <- extract_text("./Inputs/PDF/ Diagnostic Report sn09nxv.pdf")
out_text <- gsub("\\","", out_text,fixed=TRUE)
out_text_words <- unique(strsplit(paste(out_text, collapse = " "), ' ')[[1]])
out_text_words <- gsub("\r","",out_text_words)
out_text_words <- gsub("\n","",out_text_words)
#Find matches corresponding to error codes & car make
error_codes <- as.vector(unique (grep(".....\\-\\d\\d", out_text_words, value=TRUE)))
car_make <- intersect(out_text_words,car_makes)
#error_textx <- gsub(".*.....\\-\\d\\d | (\r\n|\r|\n).*","",out_text)
error_texts <- as.vector(unique(strapplyc(out_text, ".....\\-\\d\\d(.*?)(\r\n|\r|\n).*", simplify = c)))
summary_data <- c("YK64 XVX.pdf",list(error_codes),list(error_texts),car_make)
summary_data
out_text
summary_data
car_make
car_makes <- c("ACURA","AM GENERAL","AMERICAN IRONHORSE","APRILIA","ARCTIC CAT","ASTON MARTIN","ATK","AUDI","AVANTI","BENTLEY","BIG DOG","BIMOTA","BLUE BIRD","BMW","BOMBARDIER","BUELL","BUICK","CADILLAC","CANNONDALE","CHANCE COACH TRANSIT BUS","CHEVROLET","CHRYSLER","COBRA","DAEWOO","DODGE","DUCATI","E-TON","EL DORADO","FERRARI","FORD","FREIGHTLINER","GAS GAS","GILLIG","GMC","HARLEY DAVIDSON","HINO","HM","HONDA","HUSABERG","HUSQVARNA","HYUNDAI","INDIAN","INFINITI","INTERNATIONAL","ISUZU","JAGUAR","JEEP","KAWASAKI","KENWORTH","KIA","KTM","KYMCO","LAFORZA","LAMBORGHINI","LANDROVER","LEXUS","LINCOLN","LOTUS","MACK","MAZDA","MERCEDES-BENZ","MERCURY","MITSUBISHI","MITSUBISHI FUSO","MOTO GUZZI","MOTOR COACH INDUSTRIES","MV AGUSTA","NEW FLYER","NISSAN","NOVA BUS CORPORATION","OLDSMOBILE","ORION BUS","OSHKOSH MOTOR TRUCK CO.","OTTAWA","PANOZ","PETERBILT","PEUGEOT","PLYMOUTH","POLARIS","PONTIAC","PORSCHE","QVALE","RENAULT","ROLLS ROYCE","SAAB","SATURN","SEA-DOO","SEAT","SKI-DOO","STERLING","STERLING TRUCK","SUBARU","SUZUKI","TM","TOYOTA","TRIUMPH","UD","VICTORY","VOLKSWAGEN","VOLVO","WESTERN STAR","WORKHORSE","YAMAHA","ALFA ROMEO","AUTOCAR LLC.","COUNTRY COACH MOTORHOME","HUMMER","KASEA","LEM","MASERATI","MINI","MORGAN","SALEEN","WESTERN RV","MAYBACH","ROVER","VENTO","FIAT","JOHN DEERE","KUBOTA","SCION","SMART","VESPA","HYOSUNG","PIAGGIO","ARGO","BUGATTI","PIERCE MFG. INC.","AMERICAN LAFRANCE","CAN-AM","CRANE CARRIER","CUB CADET","BETA","BOBCAT","TESLA","RAM","VPG","CODA","FISKER","MCLAREN","SRT","BERTONE","IC CORPORATION","NASH")
car_make <- intersect(out_text_words,car_makes)
#Installing tabula R bindings
#install.packages("ghit")
#library(ghit)
#ghit::install_github(c("leeper/tabulizerjars", "leeper/tabulizer"), INSTALL_opts = "--no-multiarch", dependencies = c("Depends", "Imports"))
#install.packages("gsubfn")
#library(tabulizer)
#library(stringr)
#library(gsubfn)
#List of all car makes
car_makes <- c("ACURA","AM GENERAL","AMERICAN IRONHORSE","APRILIA","ARCTIC CAT","ASTON MARTIN","ATK","AUDI","AVANTI","BENTLEY","BIG DOG","BIMOTA","BLUE BIRD","BMW","BOMBARDIER","BUELL","BUICK","CADILLAC","CANNONDALE","CHANCE COACH TRANSIT BUS","CHEVROLET","CHRYSLER","COBRA","DAEWOO","DODGE","DUCATI","E-TON","EL DORADO","FERRARI","FORD","FREIGHTLINER","GAS GAS","GILLIG","GMC","HARLEY DAVIDSON","HINO","HM","HONDA","HUSABERG","HUSQVARNA","HYUNDAI","INDIAN","INFINITI","INTERNATIONAL","ISUZU","JAGUAR","JEEP","KAWASAKI","KENWORTH","KIA","KTM","KYMCO","LAFORZA","LAMBORGHINI","LANDROVER","LEXUS","LINCOLN","LOTUS","MACK","MAZDA","MERCEDES-BENZ","MERCURY","MITSUBISHI","MITSUBISHI FUSO","MOTO GUZZI","MOTOR COACH INDUSTRIES","MV AGUSTA","NEW FLYER","NISSAN","NOVA BUS CORPORATION","OLDSMOBILE","ORION BUS","OSHKOSH MOTOR TRUCK CO.","OTTAWA","PANOZ","PETERBILT","PEUGEOT","PLYMOUTH","POLARIS","PONTIAC","PORSCHE","QVALE","RENAULT","ROLLS ROYCE","SAAB","SATURN","SEA-DOO","SEAT","SKI-DOO","STERLING","STERLING TRUCK","SUBARU","SUZUKI","TM","TOYOTA","TRIUMPH","UD","VICTORY","VOLKSWAGEN","VOLVO","WESTERN STAR","WORKHORSE","YAMAHA","ALFA ROMEO","AUTOCAR LLC.","COUNTRY COACH MOTORHOME","HUMMER","KASEA","LEM","MASERATI","MINI","MORGAN","SALEEN","WESTERN RV","MAYBACH","ROVER","VENTO","FIAT","JOHN DEERE","KUBOTA","SCION","SMART","VESPA","HYOSUNG","PIAGGIO","ARGO","BUGATTI","PIERCE MFG. INC.","AMERICAN LAFRANCE","CAN-AM","CRANE CARRIER","CUB CADET","BETA","BOBCAT","TESLA","RAM","VPG","CODA","FISKER","MCLAREN","SRT","BERTONE","IC CORPORATION","NASH")
# Extracting text and individual words from PDF
out_text <- extract_text("./Inputs/PDF/ Diagnostic Report sn09nxv.pdf")
out_text <- gsub("\\","", out_text,fixed=TRUE)
out_text_words <- unique(strsplit(paste(out_text, collapse = " "), ' ')[[1]])
out_text_words <- gsub("\r","",out_text_words)
out_text_words <- gsub("\n","",out_text_words)
#Find matches corresponding to error codes & car make
error_codes <- as.vector(unique (grep(".....\\-\\d\\d", out_text_words, value=TRUE)))
car_make <- intersect(out_text_words,car_makes)
#error_textx <- gsub(".*.....\\-\\d\\d | (\r\n|\r|\n).*","",out_text)
error_texts <- as.vector(unique(strapplyc(out_text, ".....\\-\\d\\d(.*?)(\r\n|\r|\n).*", simplify = c)))
summary_data <- c("YK64 XVX.pdf",list(error_codes),list(error_texts),car_make)
summary_data
#install.packages("RPostgreSQL")
require("RPostgreSQL")
library(jsonlite)
library(dplyr)
library(ggplot2)
library(highcharter)
library(geojsonio)
library(lubridate)
#Installing tabula R bindings
#install.packages("ghit")
#library(ghit)
#ghit::install_github(c("leeper/tabulizerjars", "leeper/tabulizer"), INSTALL_opts = "--no-multiarch", dependencies = c("Depends", "Imports"))
#install.packages("gsubfn")
#library(tabulizer)
#library(stringr)
#library(gsubfn)
#List of all car makes
car_makes <- c("ACURA","AM GENERAL","AMERICAN IRONHORSE","APRILIA","ARCTIC CAT","ASTON MARTIN","ATK","AUDI","AVANTI","BENTLEY","BIG DOG","BIMOTA","BLUE BIRD","BMW","BOMBARDIER","BUELL","BUICK","CADILLAC","CANNONDALE","CHANCE COACH TRANSIT BUS","CHEVROLET","CHRYSLER","COBRA","DAEWOO","DODGE","DUCATI","E-TON","EL DORADO","FERRARI","FORD","FREIGHTLINER","GAS GAS","GILLIG","GMC","HARLEY DAVIDSON","HINO","HM","HONDA","HUSABERG","HUSQVARNA","HYUNDAI","INDIAN","INFINITI","INTERNATIONAL","ISUZU","JAGUAR","JEEP","KAWASAKI","KENWORTH","KIA","KTM","KYMCO","LAFORZA","LAMBORGHINI","LANDROVER","LEXUS","LINCOLN","LOTUS","MACK","MAZDA","MERCEDES-BENZ","MERCURY","MITSUBISHI","MITSUBISHI FUSO","MOTO GUZZI","MOTOR COACH INDUSTRIES","MV AGUSTA","NEW FLYER","NISSAN","NOVA BUS CORPORATION","OLDSMOBILE","ORION BUS","OSHKOSH MOTOR TRUCK CO.","OTTAWA","PANOZ","PETERBILT","PEUGEOT","PLYMOUTH","POLARIS","PONTIAC","PORSCHE","QVALE","RENAULT","ROLLS ROYCE","SAAB","SATURN","SEA-DOO","SEAT","SKI-DOO","STERLING","STERLING TRUCK","SUBARU","SUZUKI","TM","TOYOTA","TRIUMPH","UD","VICTORY","VOLKSWAGEN","VOLVO","WESTERN STAR","WORKHORSE","YAMAHA","ALFA ROMEO","AUTOCAR LLC.","COUNTRY COACH MOTORHOME","HUMMER","KASEA","LEM","MASERATI","MINI","MORGAN","SALEEN","WESTERN RV","MAYBACH","ROVER","VENTO","FIAT","JOHN DEERE","KUBOTA","SCION","SMART","VESPA","HYOSUNG","PIAGGIO","ARGO","BUGATTI","PIERCE MFG. INC.","AMERICAN LAFRANCE","CAN-AM","CRANE CARRIER","CUB CADET","BETA","BOBCAT","TESLA","RAM","VPG","CODA","FISKER","MCLAREN","SRT","BERTONE","IC CORPORATION","NASH")
# Extracting text and individual words from PDF
out_text <- extract_text("./Inputs/PDF/ Diagnostic Report sn09nxv.pdf")
#Installing tabula R bindings
#install.packages("ghit")
#library(ghit)
#ghit::install_github(c("leeper/tabulizerjars", "leeper/tabulizer"), INSTALL_opts = "--no-multiarch", dependencies = c("Depends", "Imports"))
#install.packages("gsubfn")
library(tabulizer)
library(stringr)
library(gsubfn)
#List of all car makes
car_makes <- c("ACURA","AM GENERAL","AMERICAN IRONHORSE","APRILIA","ARCTIC CAT","ASTON MARTIN","ATK","AUDI","AVANTI","BENTLEY","BIG DOG","BIMOTA","BLUE BIRD","BMW","BOMBARDIER","BUELL","BUICK","CADILLAC","CANNONDALE","CHANCE COACH TRANSIT BUS","CHEVROLET","CHRYSLER","COBRA","DAEWOO","DODGE","DUCATI","E-TON","EL DORADO","FERRARI","FORD","FREIGHTLINER","GAS GAS","GILLIG","GMC","HARLEY DAVIDSON","HINO","HM","HONDA","HUSABERG","HUSQVARNA","HYUNDAI","INDIAN","INFINITI","INTERNATIONAL","ISUZU","JAGUAR","JEEP","KAWASAKI","KENWORTH","KIA","KTM","KYMCO","LAFORZA","LAMBORGHINI","LANDROVER","LEXUS","LINCOLN","LOTUS","MACK","MAZDA","MERCEDES-BENZ","MERCURY","MITSUBISHI","MITSUBISHI FUSO","MOTO GUZZI","MOTOR COACH INDUSTRIES","MV AGUSTA","NEW FLYER","NISSAN","NOVA BUS CORPORATION","OLDSMOBILE","ORION BUS","OSHKOSH MOTOR TRUCK CO.","OTTAWA","PANOZ","PETERBILT","PEUGEOT","PLYMOUTH","POLARIS","PONTIAC","PORSCHE","QVALE","RENAULT","ROLLS ROYCE","SAAB","SATURN","SEA-DOO","SEAT","SKI-DOO","STERLING","STERLING TRUCK","SUBARU","SUZUKI","TM","TOYOTA","TRIUMPH","UD","VICTORY","VOLKSWAGEN","VOLVO","WESTERN STAR","WORKHORSE","YAMAHA","ALFA ROMEO","AUTOCAR LLC.","COUNTRY COACH MOTORHOME","HUMMER","KASEA","LEM","MASERATI","MINI","MORGAN","SALEEN","WESTERN RV","MAYBACH","ROVER","VENTO","FIAT","JOHN DEERE","KUBOTA","SCION","SMART","VESPA","HYOSUNG","PIAGGIO","ARGO","BUGATTI","PIERCE MFG. INC.","AMERICAN LAFRANCE","CAN-AM","CRANE CARRIER","CUB CADET","BETA","BOBCAT","TESLA","RAM","VPG","CODA","FISKER","MCLAREN","SRT","BERTONE","IC CORPORATION","NASH")
# Extracting text and individual words from PDF
out_text <- extract_text("./Inputs/PDF/ Diagnostic Report sn09nxv.pdf")
out_text <- gsub("\\","", out_text,fixed=TRUE)
out_text_words <- unique(strsplit(paste(out_text, collapse = " "), ' ')[[1]])
out_text_words <- gsub("\r","",out_text_words)
out_text_words <- gsub("\n","",out_text_words)
#Find matches corresponding to error codes & car make
error_codes <- as.vector(unique (grep(".....\\-\\d\\d", out_text_words, value=TRUE)))
car_make <- intersect(out_text_words,car_makes)
#error_textx <- gsub(".*.....\\-\\d\\d | (\r\n|\r|\n).*","",out_text)
error_texts <- as.vector(unique(strapplyc(out_text, ".....\\-\\d\\d(.*?)(\r\n|\r|\n).*", simplify = c)))
summary_data <- c("YK64 XVX.pdf",list(error_codes),list(error_texts),car_make)
summary_data
dir(path = "./Inputs/PDF/",pattern = NULL,full.names=TRUE,recursive=TRUE)
file_features <- data.frame(File_Name =  character(),
Vehicle_make = character(),
Error_code_list = character(),
Error_text_list = character())
file_features <- rbind(file_features,c("A.pdf","Ford",c("Err1","Err2"),c("errt1","errt2")))
View(file_features)
file_features <- data.frame(File_Name =  character(),
Vehicle_make = character(),
Error_code_list = character(),
Error_text_list = character())
View(file_features)
file_features <- rbind(file_features,c("A.pdf","Ford",I(c("Err1","Err2")),I(c("errt1","errt2"))))
View(file_features)
data.frame(a=1:3,b=I(list(1,1:2,1:3)))
a <- data.frame(a=1:3,b=I(list(1,1:2,1:3)))
View(a)
file_features <- data.frame(File_Name =  character(),
Vehicle_make = character(),
Error_code_list = character(),
Error_text_list = character())
file_features$File_Name[1] <- "A.pdf"
file_features <- data.frame(File_Name =  character(),
Vehicle_make = character(),
Error_code_list = character(),
Error_text_list = character())
file_features$File_Name[1] <- "A.pdf"
file_features$File_Name[1]
View(file_features)
file_features$Vehicle_make[1] <- "Ford"
File_Name[1] <- "A.pdf"
File_Name <- character()
File_Name[1] <- "A.pdf"
File_Name <- character()
Vehicle_make <- character()
Error_code_list <- character()
Error_text_list <-  character()
File_Name[1] <- "A.pdf"
Vehicle_make[1] <- "Ford"
Error_code_list[1] <- c("Err1","Err2")
Error_text_list[1] <- c("Err1","Err2")
file_features <- data.frame(File_Name,Vehicle_make,Error_code_list,Error_text_list)
View(file_features)
File_Name[1] <- "A.pdf"
Vehicle_make[1] <- "Ford"
Error_code_list[1] <- list("Err1","Err2")
Error_text_list[1] <- list("Err1","Err2")
file_features <- data.frame(File_Name,Vehicle_make,Error_code_list,Error_text_list)
View(file_features)
File_Name[1] <- "A.pdf"
Vehicle_make[1] <- "Ford"
Error_code_list[1] <- I(list("Err1","Err2"))
Error_text_list[1] <- I(list("Err1","Err2"))
file_features <- data.frame(File_Name,Vehicle_make,Error_code_list,Error_text_list)
View(file_features)
#install.packages("RPostgreSQL")
require("RPostgreSQL")
library(jsonlite)
library(dplyr)
library(ggplot2)
library(highcharter)
library(geojsonio)
library(lubridate)
File_Name <- character()
Vehicle_make <- character()
Error_code_list <- character()
Error_text_list <-  character()
File_Name[1] <- "A.pdf"
Vehicle_make[1] <- "Ford"
Error_code_list[1] <- I(list("Err1","Err2"))
file_features <- data.frame(File_Name,Vehicle_make,Error_code_list,Error_text_list)
File_Name <- character()
Vehicle_make <- character()
Error_code_list <- character()
Error_text_list <-  character()
File_Name <- character()
Vehicle_make <- character()
Error_code_list <- character()
Error_text_list <-  character()
File_Name[1] <- "A.pdf"
Vehicle_make[1] <- "Ford"
Error_code_list[1] <- I(list("Err1","Err2"))
Error_text_list[1] <- I(list("Err1","Err2"))
file_features <- data.frame(File_Name,Vehicle_make,Error_code_list,Error_text_list)
View(file_features)
str(file_features)
Error_code_list[1] <- list("Err1","Err2")
Error_text_list[1] <- list("Err1","Err2")
file_features <- data.frame(File_Name,Vehicle_make,Error_code_list,Error_text_list)
str(file_features)
File_Name <- character()
Vehicle_make <- character()
Error_code_list <- list()
Error_text_list <-  list()
File_Name[1] <- "A.pdf"
Vehicle_make[1] <- "Ford"
Error_code_list[[1]] <- c("Err1","Err2")
Error_text_list[[1]] <- c("Err1","Err2")
file_features <- data.frame(File_Name,Vehicle_make,Error_code_list,Error_text_list)
str(file_features)
rm(file_features)
File_Name <- character()
Vehicle_make <- character()
Error_code_list <- list()
Error_text_list <-  list()
File_Name[1] <- "A.pdf"
Vehicle_make[1] <- "Ford"
Error_code_list[[1]] <- c("Err1","Err2")
Error_text_list[[1]] <- c("Err1","Err2")
Error_code_list[[1]] <- c("Err1","Err2")
Error_code_list[[2]] <- c("Err3","Err4")
Error_code_list
File_Name[2] <- "B.pdf"
File_Name[1] <- "A.pdf"
a <- data.frame(cbind(File_Name,Error_text_list))
a
id <- 1:5
meas <- list(NA,c(1,2),c(1),c(1,2,3),c(1,2,3,4))
myDf <- data.frame(cbind(id,meas))
myDf
View(myDf)
id <- 1:5
meas <- list(NA,c("a","b"),c(1),c(1,2,3),c(1,2,3,4))
myDf <- data.frame(cbind(id,meas))
myDf
View(myDf)
File_Name[1] <- "A.pdf"
File_Name[2] <- "B.pdf"
Vehicle_make[2] <- "Fiat"
Error_code_list <- c(Error_code_list,"Err1","Err2")
Error_text_list
Error_code_list <- c(Error_code_list,"Err3","Err4")
Error_text_list
Error_code_list <- c(Error_code_list,"Err3","Err4")
Error_text_list
Error_code_list[[length(Error_code_list)+1]] <- c("Err3","Err4")
Error_text_list
Error_code_list
rm(Error_code_list)
Error_code_list <- c(Error_code_list,"Err1","Err2")
Error_text_list <-  list()
Error_code_list <- list()
Error_code_list <- c(Error_code_list,"Err1","Err2")
Error_code_list <- c(Error_code_list,"Err3","Err4")
Error_code_list
rm(Error_code_list)
Error_code_list <- list()
Error_code_list <- c(Error_code_list,c("Err1","Err2"))
Error_code_list <- c(Error_code_list,c("Err3","Err4"))
Error_code_list
Err_code_vect1 <- c("Err1","Err2")
rm(Error_code_list)
Error_code_list <- c(Error_code_list,Err_code_vect1)
Error_code_list <- list()
Error_code_list <- c(Error_code_list,Err_code_vect1)
Error_code_list
rm(Error_code_list)
Error_code_list <- list()
Error_code_list <- list(Err_code_vect1)
rm(Error_code_list)
Error_code_list <- list()
Error_code_list <- list(Err_code_vect1)
Error_code_list
Err_code_vect2 <- c("Err3","Err4")
Error_code_list[[lenght(Error_code_list)+1]] <- Err_code_vect2
Error_code_list[[length(Error_code_list)+1]] <- Err_code_vect2
Error_code_list
rm(Error_code_list)
Error_code_list <- list()
Error_code_list[[length(Error_code_list) +1]] <- Err_code_vect1
Error_code_list[[length(Error_code_list)+1]] <- Err_code_vect2
Error_code_list
df <- data.frame(cbind(File_Name,Error_code_list))
View(df)
File_Name <- character()
Vehicle_make <- character()
Error_code_list <- list()
Error_text_list <-  list()
d = NULL
i=1
for (file_name in dir(path = "./Inputs/PDF/",pattern = NULL,full.names=TRUE,recursive=TRUE)){
#Extract text from PDF
out_text <- extract_text(file_name)
#Basic text cleansing to enmable text recognition
out_text <- gsub("\\","", out_text,fixed=TRUE)
out_text_words <- unique(strsplit(paste(out_text, collapse = " "), ' ')[[1]])
out_text_words <- gsub("\r","",out_text_words)
out_text_words <- gsub("\n","",out_text_words)
#Extract feature from cleansed text
error_codes <- as.vector(unique (grep(".....\\-\\d\\d", out_text_words, value=TRUE)))
car_make <- intersect(out_text_words,car_makes)
error_texts <- as.vector(unique(strapplyc(out_text, ".....\\-\\d\\d(.*?)(\r\n|\r|\n).*", simplify = c)))
File_Name[i] <- file_name
Vehicle_make[i] <- car_make
Error_code_list[[length(Error_code_list)+1]] <- error_codes
i <- i+1
}
library(tabulizer)
install.packages("ghit")
library(ghit)
install.packages("ghit",repos='http://cran.us.r-project.org')
library(ghit)
ghit::install_github(c("leeper/tabulizerjars", "leeper/tabulizer"), INSTALL_opts = "--no-multiarch", dependencies = c("Depends", "Imports"))
ghit::install_github(c("leeper/tabulizerjars", "leeper/tabulizer"), INSTALL_opts = "--no-multiarch", dependencies = c("Depends", "Imports"))
install.packages("gsubfn")
library(tabulizer)
library(tabulizer)
ghit::install_github(c("leeper/tabulizerjars", "leeper/tabulizer"), INSTALL_opts = "--no-multiarch", dependencies = c("Depends", "Imports"))
library(tabulizer)
#ghit::install_github(c("leeper/tabulizerjars", "leeper/tabulizer"), INSTALL_opts = "--no-multiarch", dependencies = c("Depends", "Imports"))
ghit::install_github(c("ropenscilabs/tabulizerjars", "ropenscilabs/tabulizer"), INSTALL_opts = "--no-multiarch")
library(tabulizer)
#ghit::install_github(c("leeper/tabulizerjars", "leeper/tabulizer"), INSTALL_opts = "--no-multiarch", dependencies = c("Depends", "Imports"))
ghit::install_github(c("leeper/tabulizerjars", "leeper/tabulizer"), INSTALL_opts = "--no-multiarch", dependencies = c("Depends", "Imports"))
